"use client";

import "antd/dist/reset.css";
import React, { useEffect, useMemo, useState } from "react";
import Link from "next/link";
import { usePathname } from "next/navigation";
import { Layout, Menu, Typography, Space, Button } from "antd";
import {
  DashboardOutlined,
  FlagOutlined,
  ShoppingCartOutlined,
  MenuFoldOutlined,
  MenuUnfoldOutlined,
} from "@ant-design/icons";

const { Header, Sider, Content } = Layout;

export default function AdminLayout({ children }: { children: React.ReactNode }) {
  const pathname = usePathname();

  // 1) Sidebar collapse state
  const [collapsed, setCollapsed] = useState(false);

  // 2) Site adı otomatik (env > hostname)
  const [siteName, setSiteName] = useState("enucuz.kim");
  useEffect(() => {
    const envName = process.env.NEXT_PUBLIC_SITE_NAME;
    if (envName && envName.trim()) {
      setSiteName(envName.trim());
    } else if (typeof window !== "undefined") {
      const host = window.location.hostname; // port hariç
      setSiteName(host || "enucuz.kim");
    }
  }, []);

  // 3) Sol menü selected key
  const sideSelected = useMemo(() => {
    if (pathname?.startsWith("/admin/products")) return "/admin/products";
    if (pathname?.startsWith("/admin/feature-flags")) return "/admin/feature-flags";
    return "/admin/dashboard";
  }, [pathname]);

  // 4) Sol menü öğeleri (Dashboard, Ürünler, Feature Flags)
  const sideItems = useMemo(
    () => [
      { key: "/admin/dashboard", icon: <DashboardOutlined />, label: <Link href="/admin/dashboard">Dashboard</Link> },
      { key: "/admin/products", icon: <ShoppingCartOutlined />, label: <Link href="/admin/products">Ürünler</Link> },
      { key: "/admin/feature-flags", icon: <FlagOutlined />, label: <Link href="/admin/feature-flags">Feature Flags</Link> },
    ],
    []
  );

  return (
    <Layout style={{ minHeight: "100vh" }}>
      <Sider width={220} theme="dark" collapsible collapsed={collapsed} trigger={null}>
        <div
          style={{
            color: "#fff",
            fontWeight: 700,
            fontSize: collapsed ? 14 : 18,
            padding: "16px",
            whiteSpace: "nowrap",
            overflow: "hidden",
            textOverflow: "ellipsis",
          }}
          title={siteName}
        >
          {siteName}
        </div>
        <Menu mode="inline" theme="dark" selectedKeys={[sideSelected]} items={sideItems} />
      </Sider>

      <Layout>
        <Header
          style={{
            background: "#fff",
            padding: "0 16px",
            display: "flex",
            alignItems: "center",
            gap: 12,
            borderBottom: "1px solid #e5e7eb",
          }}
        >
          <Button
            type="text"
            aria-label="Toggle sidebar"
            onClick={() => setCollapsed((c) => !c)}
            icon={collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}
            style={{ fontSize: 18 }}
          />
          <Typography.Title level={5} style={{ margin: 0 }}>
            Yönetim Paneli
          </Typography.Title>

          {/** Üst yatay bar ŞİMDİLİK BOŞ, ileride widget/sekme eklenecek */}
          <div style={{ marginLeft: 16, flex: 1 }} />

          <div style={{ marginLeft: "auto" }}>
            <Space style={{ color: "#64748b" }}>admin@example.com</Space>
          </div>
        </Header>

        <Content style={{ margin: 16 }}>
          <div style={{ background: "#fff", padding: 16, borderRadius: 12, minHeight: "calc(100vh - 56px - 32px)" }}>
            {children}
          </div>
        </Content>
      </Layout>
    </Layout>
  );
}
